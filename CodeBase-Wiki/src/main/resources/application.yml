server:
  port: 8085
  tomcat:
    uri-encoding: UTF-8

spring:
  # Spring AI 配置
  ai:
    dashscope:
      api-key: ${DASHSCOPE_API_KEY}
      chat:
        options:
          model: qwen-plus-2025-01-25
  application:
    name: CodeBase-Wiki
  datasource:
    url: jdbc:sqlite:data/codebasewiki_db.sqlite
    driver-class-name: org.sqlite.JDBC
    username: test
    password: test
    hikari:
      maximum-pool-size: 30        # 最大连接数
      minimum-idle: 5              # 最小空闲连接数
      connection-timeout: 30000    # 连接超时时间(ms)
      idle-timeout: 600000         # 空闲超时时间(ms)
      max-lifetime: 1800000        # 连接最大生存时间(ms)
  sql:
    init:
      schema-locations: classpath:schema.sql
      mode: always
      continue-on-error: true

# MyBatis-Plus 配置
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  type-aliases-package: com.hxg.model.entity
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0

# 日志输出配置
logging:
  level:
    root: INFO
    # Tool调用监控日志
    com.hxg.monitor: INFO
    com.hxg.llm.tool: DEBUG
    com.hxg.llm.service: INFO
  org:
    springframework:
      boot: error
  file:
    name: ./logs/codebasewiki.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Memory服务配置
memory:
  service:
    url: http://localhost:8080

# Feign配置
feign:
  client:
    config:
      memory-service:
        connectTimeout: 5000
        readTimeout: 10000
        loggerLevel: basic
  hystrix:
    enabled: false
  circuitbreaker:
    enabled: false

# 项目配置
project:
  repository:
    # Git仓库克隆根目录
    base-path: ${PROJECT_REPO_PATH:C:\Code\repository}
  # Wiki文档生成配置
  wiki:
    prompt:
      # 目录生成prompt版本 (v1, v2, v3)
      catalogue-version: ${WIKI_CATALOGUE_PROMPT_VERSION:v3}
      # 文档生成prompt版本 (v1, v2)
      doc-version: ${WIKI_DOC_PROMPT_VERSION:v2}
    # 监控配置
    monitor:
      # 启用Tool Calling监控
      tool-calling: ${WIKI_MONITOR_TOOL_CALLING:true}
      # 记录详细的Tool调用信息
      tool-details: ${WIKI_MONITOR_TOOL_DETAILS:true}